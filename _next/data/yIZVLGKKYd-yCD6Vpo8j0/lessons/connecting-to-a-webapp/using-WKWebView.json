{"pageProps":{"post":{"attributes":{},"html":"<p>We need to create a <code>UIViewRepresentable</code> to connect SwiftUI with a UIKit View, such as WKWebView. </p>\n<h2 id=\"infopage\">InfoPage</h2>\n<pre><code class=\"hljs language-swift\"><span class=\"hljs-keyword\">import</span> SwiftUI\n<span class=\"hljs-keyword\">import</span> WebKit\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">WebInterfaceDialogs</span>: <span class=\"hljs-title class_\">NSObject</span>, <span class=\"hljs-title class_\">WKScriptMessageHandler</span> {\n    <span class=\"hljs-keyword\">func</span> <span class=\"hljs-title function_\">userContentController</span>(<span class=\"hljs-keyword\">_</span> <span class=\"hljs-params\">userContentController</span>: <span class=\"hljs-type\">WKUserContentController</span>, <span class=\"hljs-params\">didReceive</span> <span class=\"hljs-params\">message</span>: <span class=\"hljs-type\">WKScriptMessage</span>) {\n        <span class=\"hljs-built_in\">print</span>(message.body)\n    }\n}\n\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">WebView</span>: <span class=\"hljs-title class_\">UIViewRepresentable</span> {\n    <span class=\"hljs-keyword\">func</span> <span class=\"hljs-title function_\">makeUIView</span>(<span class=\"hljs-params\">context</span>: <span class=\"hljs-type\">Context</span>) -&gt; <span class=\"hljs-type\">WKWebView</span> {\n        <span class=\"hljs-keyword\">let</span> config <span class=\"hljs-operator\">=</span> <span class=\"hljs-type\">WKWebViewConfiguration</span>()\n        config.userContentController.add(<span class=\"hljs-type\">WebInterfaceDialogs</span>() , name: <span class=\"hljs-string\">&quot;alert&quot;</span>)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">WKWebView</span>(frame: .zero, configuration: config)\n    }\n    \n    <span class=\"hljs-keyword\">func</span> <span class=\"hljs-title function_\">updateUIView</span>(<span class=\"hljs-keyword\">_</span> <span class=\"hljs-params\">webView</span>: <span class=\"hljs-type\">WKWebView</span>, <span class=\"hljs-params\">context</span>: <span class=\"hljs-type\">Context</span>) {\n        <span class=\"hljs-keyword\">let</span> url <span class=\"hljs-operator\">=</span> <span class=\"hljs-type\">URL</span>(string: <span class=\"hljs-string\">&quot;https://firtman.github.io/coffeemasters/webapp&quot;</span>)<span class=\"hljs-operator\">!</span>\n        webView.load(<span class=\"hljs-type\">URLRequest</span>(url: url))\n        \n        <span class=\"hljs-keyword\">let</span> name <span class=\"hljs-operator\">=</span> <span class=\"hljs-type\">UserDefaults</span>.standard.string(forKey: <span class=\"hljs-string\">&quot;name&quot;</span>) <span class=\"hljs-operator\">??</span> <span class=\"hljs-string\">&quot;&quot;</span>\n        webView.evaluateJavaScript(<span class=\"hljs-string\">&quot;injectFormData(&#x27;<span class=\"hljs-subst\">\\(name)</span>&#x27;)&quot;</span>)\n    }\n}\n\n\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">InfoPage</span>: <span class=\"hljs-title class_\">View</span> {\n    <span class=\"hljs-keyword\">var</span> body: <span class=\"hljs-keyword\">some</span> <span class=\"hljs-type\">View</span> {\n        <span class=\"hljs-type\">VStack</span> {\n            <span class=\"hljs-type\">AppTitle</span>()\n            <span class=\"hljs-type\">WebView</span>()\n        }\n    }\n}\n</code></pre>\n","slug":"using-WKWebView","title":"Using WKWebView","section":"Connecting to a Webapp","icon":"code","filePath":"/home/runner/work/intro-swift/intro-swift/lessons/07-connecting-to-a-webapp/A-using-WKWebView.md","nextSlug":"/intro-swift/lessons/final-steps/app-icons-and-launch-screen","prevSlug":"/intro-swift/lessons/using-APIs-and-JSON/bonus-filter"}},"__N_SSG":true}