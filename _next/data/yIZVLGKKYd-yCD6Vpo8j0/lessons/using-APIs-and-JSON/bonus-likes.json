{"pageProps":{"post":{"attributes":{},"html":"<p>A bonus to this project is to add favorites or liked products and save it locally.</p>\n<h2 id=\"likesmanager\">LikesManager</h2>\n<pre><code class=\"hljs language-swift\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">LikesManager</span>: <span class=\"hljs-title class_\">ObservableObject</span> {\n    <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">let</span> key <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;likes&quot;</span>\n    <span class=\"hljs-meta\">@Published</span> <span class=\"hljs-keyword\">var</span> likes: [<span class=\"hljs-type\">Int</span>] <span class=\"hljs-operator\">=</span> []\n    \n    <span class=\"hljs-keyword\">init</span>() {\n        likes <span class=\"hljs-operator\">=</span> <span class=\"hljs-type\">UserDefaults</span>.standard.array(forKey: <span class=\"hljs-type\">LikesManager</span>.key) <span class=\"hljs-keyword\">as?</span> [<span class=\"hljs-type\">Int</span>] <span class=\"hljs-operator\">??</span> []\n    }\n    \n    <span class=\"hljs-keyword\">func</span> <span class=\"hljs-title function_\">isLiked</span>(<span class=\"hljs-params\">id</span>: <span class=\"hljs-type\">Int</span>) -&gt; <span class=\"hljs-type\">Bool</span> {\n        <span class=\"hljs-keyword\">return</span> likes.contains(id)\n    }\n    \n    <span class=\"hljs-keyword\">func</span> <span class=\"hljs-title function_\">toggle</span>(<span class=\"hljs-keyword\">_</span> <span class=\"hljs-params\">id</span>: <span class=\"hljs-type\">Int</span>) {\n        <span class=\"hljs-keyword\">if</span> isLiked(id: id) {\n            likes.removeAll { <span class=\"hljs-variable\">$0</span> <span class=\"hljs-operator\">==</span> id }\n        } <span class=\"hljs-keyword\">else</span> {\n            likes.append(id)\n        }\n        <span class=\"hljs-type\">UserDefaults</span>.standard.set(likes, forKey: <span class=\"hljs-type\">LikesManager</span>.key)\n    }\n}\n</code></pre>\n<h2 id=\"likebutton-view\">LikeButton View</h2>\n<pre><code class=\"hljs language-swift\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">LikeButton</span>: <span class=\"hljs-title class_\">View</span> {\n    <span class=\"hljs-meta\">@EnvironmentObject</span> <span class=\"hljs-keyword\">var</span> likesManager: <span class=\"hljs-type\">LikesManager</span>\n    \n    <span class=\"hljs-keyword\">var</span> product: <span class=\"hljs-type\">Product</span>\n    \n    <span class=\"hljs-keyword\">var</span> body: <span class=\"hljs-keyword\">some</span> <span class=\"hljs-type\">View</span> {\n        <span class=\"hljs-type\">Image</span>(systemName: likesManager.isLiked(id: product.id) <span class=\"hljs-operator\">?</span> <span class=\"hljs-string\">&quot;heart.fill&quot;</span> : <span class=\"hljs-string\">&quot;heart&quot;</span>)\n            .padding()\n            .foregroundColor(<span class=\"hljs-type\">Color</span>(<span class=\"hljs-string\">&quot;Secondary&quot;</span>))\n            .accessibilityLabel(likesManager.isLiked(id: product.id) <span class=\"hljs-operator\">?</span> <span class=\"hljs-string\">&quot;Dislike&quot;</span> : <span class=\"hljs-string\">&quot;Like&quot;</span>)\n            .onTapGesture {\n                likesManager.toggle(product.id)\n            }\n    }\n}\n</code></pre>\n<h2 id=\"usage-on-productitem\">Usage on ProductItem</h2>\n<pre><code class=\"hljs language-swift\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">ProductItem</span>: <span class=\"hljs-title class_\">View</span> {\n    <span class=\"hljs-keyword\">var</span> product: <span class=\"hljs-type\">Product</span>\n    \n    <span class=\"hljs-keyword\">var</span> body: <span class=\"hljs-keyword\">some</span> <span class=\"hljs-type\">View</span> {\n        <span class=\"hljs-type\">VStack</span>{\n            <span class=\"hljs-type\">AsyncImage</span>(url: product.imageURL)\n                .frame(width: <span class=\"hljs-number\">300</span>, height: <span class=\"hljs-number\">150</span>)\n                .background(<span class=\"hljs-type\">Color</span>(<span class=\"hljs-string\">&quot;AccentColor&quot;</span>))\n            <span class=\"hljs-type\">HStack</span> {\n                <span class=\"hljs-type\">VStack</span>(alignment: .leading) {\n                    <span class=\"hljs-type\">Text</span>(product.name)\n                        .font(.title3)\n                        .bold()\n                    <span class=\"hljs-type\">Text</span>(<span class=\"hljs-string\">&quot;$ <span class=\"hljs-subst\">\\(product.price, specifier: <span class=\"hljs-string\">&quot;%.2f&quot;</span>)</span>&quot;</span>)\n                        .font(.caption)\n\n                }.padding(<span class=\"hljs-number\">8</span>)\n                <span class=\"hljs-type\">Spacer</span>()\n                <span class=\"hljs-type\">LikeButton</span>(product: product)\n            }\n        }\n        .background(<span class=\"hljs-type\">Color</span>(<span class=\"hljs-string\">&quot;SurfaceBackground&quot;</span>))\n        .cornerRadius(<span class=\"hljs-number\">10</span>)\n        .padding(.trailing)\n\n    }\n}\n</code></pre>\n<h2 id=\"usage-on-detailspage\">Usage on DetailsPage</h2>\n<pre><code class=\"hljs language-swift\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">DetailsPage</span>: <span class=\"hljs-title class_\">View</span> {\n    \n    <span class=\"hljs-keyword\">var</span> product: <span class=\"hljs-type\">Product</span>\n    <span class=\"hljs-meta\">@State</span> <span class=\"hljs-keyword\">var</span> quantity: <span class=\"hljs-type\">Int</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-meta\">@EnvironmentObject</span> <span class=\"hljs-keyword\">var</span> cartManager: <span class=\"hljs-type\">CartManager</span>\n    <span class=\"hljs-meta\">@Environment</span>(\\.dismiss) <span class=\"hljs-keyword\">var</span> dismiss\n        \n    <span class=\"hljs-keyword\">var</span> body: <span class=\"hljs-keyword\">some</span> <span class=\"hljs-type\">View</span> {\n        <span class=\"hljs-type\">ScrollView</span> {\n            <span class=\"hljs-type\">ProductThumbnail</span>(url: product.imageURL)\n                .padding(.top, <span class=\"hljs-number\">32</span>)\n            <span class=\"hljs-type\">Text</span>(product.description <span class=\"hljs-operator\">??</span> <span class=\"hljs-string\">&quot;&quot;</span>)\n                .frame(maxWidth: .infinity)\n                .multilineTextAlignment(.leading)\n                .padding(<span class=\"hljs-number\">24</span>)\n            <span class=\"hljs-type\">HStack</span> {\n                <span class=\"hljs-type\">Text</span>(<span class=\"hljs-string\">&quot;$ <span class=\"hljs-subst\">\\(product.price, specifier: <span class=\"hljs-string\">&quot;%.2f&quot;</span>)</span> ea&quot;</span>)\n                <span class=\"hljs-type\">Stepper</span>(value: <span class=\"hljs-variable\">$quantity</span>, in: <span class=\"hljs-number\">1</span><span class=\"hljs-operator\">...</span><span class=\"hljs-number\">10</span>) { }\n            }\n                .frame(maxWidth: .infinity)\n                .padding(<span class=\"hljs-number\">30</span>)\n            \n            <span class=\"hljs-keyword\">let</span> total <span class=\"hljs-operator\">=</span> product.price <span class=\"hljs-operator\">*</span> <span class=\"hljs-type\">Double</span>(<span class=\"hljs-variable\">$quantity</span>.wrappedValue)\n                        \n            <span class=\"hljs-type\">Text</span>(<span class=\"hljs-string\">&quot;Subtotal $<span class=\"hljs-subst\">\\(total, specifier: <span class=\"hljs-string\">&quot;%.2f&quot;</span>)</span>&quot;</span>)\n                .bold()\n                .padding(<span class=\"hljs-number\">12</span>)\n            \n            <span class=\"hljs-type\">Button</span>(<span class=\"hljs-string\">&quot;Add <span class=\"hljs-subst\">\\(quantity)</span> to Cart&quot;</span>) {\n                dismiss()\n                cartManager.add(product: product, quantity: quantity)\n            }\n                .padding()\n                .frame(width: <span class=\"hljs-number\">250.0</span>)\n                .background(<span class=\"hljs-type\">Color</span>(<span class=\"hljs-string\">&quot;Alternative2&quot;</span>))\n                .foregroundColor(<span class=\"hljs-type\">Color</span>.black)\n                .cornerRadius(<span class=\"hljs-number\">25</span>)\n\n        }\n            .navigationTitle(product.name)\n            .toolbar {\n                <span class=\"hljs-type\">LikeButton</span>(product: product)\n            }\n    }\n}\n</code></pre>\n","slug":"bonus-likes","title":"Bonus Likes","section":"Using APIs and JSON","icon":"bridge","filePath":"/home/runner/work/intro-swift/intro-swift/lessons/06-using-APIs-and-JSON/C-bonus-likes.md","nextSlug":"/intro-swift/lessons/using-APIs-and-JSON/bonus-filter","prevSlug":"/intro-swift/lessons/using-APIs-and-JSON/using-apis"}},"__N_SSG":true}